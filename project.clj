(defn cli-deps->lein [deps]
  (into []
        (map (fn [[coord version-map]]
               {:pre [(qualified-symbol? coord)]}
               (let [[coord classifier] (let [splits (-> coord name (clojure.string/split #"\$"))]
                                          (case (count splits)
                                            1 [coord nil]
                                            2 [(symbol (namespace coord)
                                                       (first splits))
                                               (second splits)]))]
                 (cond-> [coord (:mvn/version version-map)]
                   classifier (conj :classifier classifier)))))
        deps))
;; just enough for threatgrid.trapperkeeper.clj-http-service.protocols, in case someone
;; wants to make their own compatible tk service.
(def base-deps
  `{org.clojure/clojure {:mvn/version "1.10.3"}})
(def trapperkeeper-version "3.2.0")
(def kitchensink-version "3.1.3")
;; instead of splitting this project into submodules (too hard to manage), just ship the src
;; in one jar and document the optional deps.
(def test-deps
  `{;; # test deps
    puppetlabs/trapperkeeper$test {:mvn/version ~trapperkeeper-version}
    ring/ring-jetty-adapter {:mvn/version "1.9.5"}
    puppetlabs/kitchensink {:mvn/version ~kitchensink-version}
    puppetlabs/kitchensink$test {:mvn/version ~kitchensink-version}
    ;; # optional deps
    ;; - for threatgrid.clj-http-fake
    ;; - for threatgrid.clj-http-fake.global
    ;; - for threatgrid.trapperkeeper.clj-http-fake-service
    org.clojure/math.combinatorics {:mvn/version "0.1.3"}
    ring/ring-codec {:mvn/version "1.0.1"}
    ;; - for threatgrid.clj-http-fake.global
    robert/hooke {:mvn/version "1.3.0"}
    ;; - for threatgrid.trapperkeeper.clj-http-service
    ;; - for threatgrid.trapperkeeper.clj-http-fake-service
    puppetlabs/trapperkeeper {:mvn/version ~trapperkeeper-version}
    ;; - for threatgrid.trapperkeeper.clj-http-service
    ;; - for threatgrid.clj-http-fake.global
    clj-http/clj-http {:mvn/version "3.12.3"}})
(def deps-edn
  ((requiring-resolve 'clojure.walk/postwalk)
   (fn [v]
     (if (map? v)
       (into (sorted-map) v)
       v))
   `{:paths ["src"]
     :deps ~base-deps
     :aliases {:test {:extra-paths ["test"]
                      :extra-deps ~test-deps}
               :runner {:extra-deps {io.github.cognitect-labs/test-runner 
                                     {:git/tag "v0.5.0" :git/sha "b3fd0d2"}}
                        :main-opts ["-m" "cognitect.test-runner"]
                        :exec-fn cognitect.test-runner.api/test}}}))
(spit "deps.edn"
      (binding [*print-namespace-maps* false
                *print-length* nil
                *print-level* nil]
        (with-out-str
          (println ";; Automatically generated by project.clj")
          ((requiring-resolve 'clojure.pprint/pprint) deps-edn))))
(defproject org.clojars.threatgrid/trapperkeeper-clj-http "0.0.1-SNAPSHOT"
  :description "clj-http{-fake} as a Trapperkeeper service."
  :url "https://github.com/frenchy64/trapperkeeper-clj-http"
  :license {:name "MIT License"
            :url  "http://www.opensource.org/licenses/mit-license.php"
            :distribution :repo}
  :dependencies ~(cli-deps->lein base-deps)
  :profiles {:gen-doc {:jvm-opts ["--add-opens" "java.base/java.lang=ALL-UNNAMED"]}
             :dev {:dependencies ~(cli-deps->lein test-deps)}}
  :deploy-repositories [["snapshot" {:url "https://clojars.org/repo"
                                     :username :env/clojars_user
                                     :password  :env/clojars_token
                                     :sign-releases false}]
                        ["release" {:url "https://clojars.org/repo"
                                    :username :env/clojars_user
                                    :password  :env/clojars_token
                                    :sign-releases false}]]
  :release-tasks [["clean"]
                  ["vcs" "assert-committed"]
                  ["change" "version" "leiningen.release/bump-version" "release"]
                  ["vcs" "commit"]
                  ["vcs" "tag" "--no-sign"]
                  ["shell" "./scripts/deploy-doc"]
                  ["deploy" "release"]
                  ["change" "version" "leiningen.release/bump-version"]
                  ["vcs" "commit"]
                  ["vcs" "push"]]
  :codox {:source-uri "https://github.com/frenchy64/trapperkeeper-clj-http/blob/{git-commit}/{filepath}#L{line}"}
  :plugins [[lein-codox "0.10.7"]
            [lein-shell "0.5.0"]
            [lein-pprint "1.3.2"]])
